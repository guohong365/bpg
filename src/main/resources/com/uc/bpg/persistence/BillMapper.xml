<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.uc.bpg.persistence.BillMapper">
	<resultMap id="billDetail" type="com.uc.bpg.domain.Bill">
		<id column="ID" jdbcType="INTEGER" property="id" />
		<result column="UUID" jdbcType="CHAR" property="uuid" />
		<result column="HOTEL" jdbcType="INTEGER" property="hotel" />
		<result column="BASIC_CHARGE" jdbcType="DECIMAL" property="basicCharge" />
		<result column="INCOME" jdbcType="DECIMAL" property="income" />
		<result column="RENT" jdbcType="DECIMAL" property="rent" />
		<result column="STATE" jdbcType="CHAR" property="state" />
		<result column="GENERATED_TIME" jdbcType="TIMESTAMP" property="generatedTime" />
		<result column="PAY_TIME" jdbcType="TIMESTAMP" property="payTime" />
		<result column="PAYER" jdbcType="INTEGER" property="payer" />
		<result column="PAYER_NAME" jdbcType="VARCHAR" property="payerName" />
		<result column="VERIFY_TIME" jdbcType="TIMESTAMP" property="verifyTime" />
		<result column="VERIFIER" jdbcType="INTEGER" property="verifier" />
		<result column="VERIFIER_NAME" jdbcType="VARCHAR" property="verifierName" />
		<result column="HOTEL_NAME" jdbcType="VARCHAR" property="hotelName" />
	</resultMap>
	<sql id="selectSql">
		select
		a.ID,
		a.UUID,
		a.HOTEL,
		a.BASIC_CHARGE,
		a.INCOME,
		a.RENT,
		a.STATE,
		a.GENERATED_TIME,
		a.PAY_TIME,
		a.PAYER,
		b.NAME as PAYER_NAME,
		a.VERIFY_TIME,a.VERIFIER,
		c.NAME as VERIFIER_NAME,
		d.NAME as HOTEL_NAME
		from t_bill a
		left join t_user b on b.ID=a.PAYER
		left join t_user c on c.ID=a.VERIFIER
		left join t_orgnization d on d.ID=a.HOTEL
	</sql>
	<sql id="whereSql">
		<where>
			<trim prefixOverrides="and">
				<choose>
					<when test="queryForm.queryHotel !=null">
						and a.HOTEL = #{queryForm.queryHotel, jdbcType=INTEGER}
					</when>
					<when test="queryForm.queryHotelName !=null">
						and d.NAME like '%${queryForm.queryHotelName}%'
					</when>
				</choose>
				<if test="queryForm.queryGeneratedTimeFrom !=null">
					and a.GENERATED_TIME &gt;= #{queryForm.queryGeneratedTimeFrom,
					jdbcType=DATE}
				</if>
				<if test="queryForm.queryGeneratedTimeTo !=null">
					and a.GENERATED_TIME &lt;= #{queryForm.queryGeneratedTimeTo,
					jdbcType=DATE}
				</if>
				<if test="queryForm.queryIncomeFrom !=null">
					and a.INCOME &gt;= #{queryForm.queryIncomeFrom,jdbcType=DECIMAL}
				</if>
				<if test="queryForm.queryIncomeTo != null">
					and a.INCOME &lt;= #{queryForm.queryIncomeTo, jdbcType=DECIMAL}
				</if>
				<if test="queryForm.queryPayableFrom != null">
					and a.PAYABLE &gt;= #{queryForm.queryPayableFrom,jdbcType=DECIMAL}
				</if>
				<if test="queryForm.queryPayableTo != null">
					and a.PAYABLE &lt;= #{queryForm.queryPayableTo, jdbcType=DECIMAL}
				</if>
				<if test="queryForm.queryPayerName !=null">
					and b.PNAME like '%${queryForm.queryPayerName}%'
				</if>
				<if test="queryForm.queryVerifyTimeFrom !=null">
					and a.VERIFY_TIME &gt;= #{queryForm.queryVerifyTime, jdbcType=DATE}
				</if>
				<if test="queryForm.queryVerifyTimeTo !=null">
					and a.VERIFY_TIME &lt;= #{queryForm.queryVerifyTime, jdbcType=DATE}
				</if>
				<if test="queryForm.queryVerifierName !=null">
					and c.NAME like '%${queryForm.queryVerifierName}%'
				</if>
				<if test="queryForm.queryStates !=null">
					and a.STATE in (<foreach collection="queryForm.queryStates" item="state" open="'" separator="','" close="'">${state}</foreach>)
				</if>
			</trim>
		</where>
	</sql>
	<sql id="orderBySql">
		<if
			test="queryForm!=null and queryForm.queryOrderByClause!=null and !queryForm.queryOrderByClause.empty">
			order by ${queryForm.queryOrderByClause}
		</if>
	</sql>
	<select id="selectOptimized" parameterType="map" resultMap="billDetail">
		<include refid="selectSql" />
		<include refid="whereSql" />
		<include refid="orderBySql" />
		limit ${offset},${count}
	</select>
	<select id="selectCountOptimized" parameterType="com.uc.bpg.forms.BillQueryForm"
		resultType="java.lang.Long">
		select count(*)
		from t_bill a
		left join t_user b on b.ID=a.PAYER
		left join t_user c on c.ID=a.VERIFIER
		left join t_orgnization d on d.ID=a.HOTEL
		<include refid="whereSql" />
	</select>

	<select id="selectById" parameterType="java.lang.Long"
		resultMap="billDetail">
		<include refid="selectSql" />
		where a.ID = #{id, jdbcType=INTEGER}
	</select>

	<insert id="insertDetail" parameterType="com.uc.bpg.domain.Bill">
		insert into t_bill (
		UUID, HOTEL, BASIC_CHARGE,
		INCOME, RENT, STATE,
		GENERATED_TIME, PAY_TIME, PAYER, VERIFY_TIME,
		VERIFIER)
		values (
		#{uuid,jdbcType=CHAR},#{hotel,jdbcType=INTEGER} #{basicCharge,jdbcType=DECIMAL},
		#{income,jdbcType=DECIMAL}, #{rent,jdbcType=DECIMAL}, #{state,jdbcType=CHAR},
		#{generatedTime,jdbcType=TIMESTAMP}, #{payTime,jdbcType=TIMESTAMP},
		#{payer,jdbcType=INTEGER},
		#{verifyTime,jdbcType=TIMESTAMP}, #{verifier,jdbcType=INTEGER})
	</insert>
	<update id="updateDetailSelective" parameterType="com.uc.bpg.domain.Bill">
		update t_bill
		<set>
			<if test="basicCharge != null">
				BASIC_CHARGE = #{basicCharge,jdbcType=DECIMAL},
			</if>
			<if test="income != null">
				INCOME = #{income,jdbcType=DECIMAL},
			</if>
			<if test="rent != null">
				RENT = #{rent,jdbcType=DECIMAL},
			</if>
			<if test="state != null">
				STATE = #{state,jdbcType=CHAR},
			</if>
			<if test="generatedTime != null">
				GENERATED_TIME = #{generatedTime,jdbcType=TIMESTAMP},
			</if>
			<if test="payTime != null">
				PAY_TIME = #{payTime,jdbcType=TIMESTAMP},
			</if>
			<if test="payer != null">
				PAYER = #{payer,jdbcType=INTEGER},
			</if>
			<if test="verifyTime != null">
				VERIFY_TIME = #{verifyTime,jdbcType=TIMESTAMP},
			</if>
			<if test="verifier != null">
				VERIFIER = #{verifier,jdbcType=INTEGER},
			</if>
		</set>
		where ID = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateDetail" parameterType="com.uc.bpg.domain.Bill">
		update t_bill
		set
		BASIC_CHARGE = #{basicCharge,jdbcType=DECIMAL},
		INCOME = #{income,jdbcType=DECIMAL},
		RENT = #{rent,jdbcType=DECIMAL},
		STATE = #{state,jdbcType=CHAR},
		GENERATED_TIME = #{generatedTime,jdbcType=TIMESTAMP},
		PAY_TIME = #{payTime,jdbcType=TIMESTAMP},
		PAYER = #{payer,jdbcType=INTEGER},
		VERIFY_TIME = #{verifyTime,jdbcType=TIMESTAMP},
		VERIFIER = #{verifier,jdbcType=INTEGER}
		where ID = #{id,jdbcType=INTEGER}
	</update>
	<insert id="insertGeneratedBill" parameterType="map">
		insert into t_bill (UUID, HOTEL, BASIC_CHARGE, INCOME, RENT, STATE,
		GENERATED_TIME)
		values (#{bill.uuid,jdbcType=CHAR}, #{bill.hotel,jdbcType=INTEGER},
		#{bill.basicCharge,jdbcType=DECIMAL},
		#{bill.income,jdbcType=DECIMAL}, #{bill.rent,jdbcType=DECIMAL}, #{bill.state,jdbcType=CHAR},
		#{bill.generatedTime,jdbcType=TIMESTAMP});
		<if test="usages!=null and !usages.empty">
			update t_device_usage a left join t_bill b on b.UUID =
			#{bill.uuid,jdbcType=CHAR}
			set a.IN_BILL=true, a.BILL=b.ID
			where a.ID in
			<foreach collection="usages" item="usage" open="(" close=")"
				separator=",">
				#{usage.id,jdbcType=INTEGER}
			</foreach>
		</if>
	</insert>
</mapper>