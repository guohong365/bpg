<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.uc.bpg.persistence.RoomMapper">
  <resultMap id="roomDetail" type="com.uc.bpg.domain.Room">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="UUID" jdbcType="CHAR" property="uuid" />
    <result column="HOTEL" jdbcType="INTEGER" property="hotel" />
    <result column="STOREY" jdbcType="INTEGER" property="storey" />
    <result column="ROOM_NO" jdbcType="VARCHAR" property="roomNo" />
    <result column="DEVICE" jdbcType="INTEGER" property="device"/>
    <result column="VALID" jdbcType="BIT" property="valid"/>
    <result column="DEVICE_NAME" jdbcType="VARCHAR" property="deviceName"/>
    <result column="DEVICE_SERIAL" jdbcType="VARCHAR" property="deviceSerial"/>
    <result column="HOTEL_NAME" jdbcType="VARCHAR" property="hotelName"/>
    <result column="DEVICE_STATUS" jdbcType="VARCHAR" property="deviceStatus"/>
    <result column="CAN_CANCEL" jdbcType="BIT" property="canCancel"/>
  </resultMap>
    <sql id="orderBySql">
    <if test="queryForm!=null and queryForm.queryOrderByClause!=null and !queryForm.queryOrderByClause.empty">
      order by ${queryForm.queryOrderByClause}
    </if>
  </sql>  

  <sql id="selectSql">
    select 
      a.ID as ID, 
      a.UUID as UUID, 
      a.HOTEL as HOTEL, 
      a.STOREY as STOREY, 
      a.ROOM_NO as ROOM_NO, 
      a.VALID as VALID,
      b.ID as DEVICE, 
      b.SERIAL_NO as DEVICE_SERIAL,
      concat_ws(' ', c.PRODUCT,c.NAME) as DEVICE_NAME,  
      d.STATUS as DEVICE_STATUS, 
      e.NAME as HOTEL_NAME,
      (b.ID is null) as CAN_CANCEL 
    from t_room a
    left join t_device b on b.ROOM = a.ID
    left join t_type c on c.ID=b.TYPE
    left join t_device_status  d on d.DEVICE = b.ID  and d.ID=(select max(ID) from t_device_status where DEVICE=b.ID)
    left join t_orgnization e on e.ID=a.HOTEL 
  </sql>
  <sql id="whereSql">
      <where>
      <trim prefixOverrides="and">
        <choose>
          <when test="queryForm.queryHotel != null">
            and a.HOTEL = #{queryForm.queryHotel, jdbcType=INTEGER}
          </when>
          <when test="queryForm.queryHotelName !=null">
            and e.NAME like '%${queryForm.queryHotelName}%'
          </when>
        </choose>
        <if test="queryForm.queryRoomNo !=null">
          and a.ROOM_NO like '%${queryForm.queryRoomNo}%'
        </if>
        <if test="queryForm.queryStorey !=null">
          and a.STOREY = #{queryForm.queryStorey, jdbcType=INTEGER}
        </if>
        <if test="!queryForm.queryAll">
          and a.VALID
        </if>
      </trim>
    </where>
  </sql>
  <select id="selectCountOptimized" parameterType="map" resultType="java.lang.Long">
    select COUNT(*)
    from t_room a
    left join t_device b on b.ROOM = a.ID
    left join t_type c on c.ID=b.TYPE
    left join t_device_status  d on d.DEVICE = b.ID  and d.ID=(select max(ID) from t_device_status where DEVICE=b.ID)
    left join t_orgnization e on e.ID=a.HOTEL
    <include refid="whereSql" />
  </select>
  <select id="selectOptimized" parameterType="map" resultMap="roomDetail">
    <include refid="selectSql" />
    <include refid="whereSql" />
    <include refid="orderBySql" />
    limit ${offset},${count}
  </select>
  <select id="selectById" parameterType="java.lang.Long" resultMap="roomDetail">     
    <include refid="selectSql" />
    where a.ID = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectUnallocatedRooms" parameterType="map" resultMap="roomDetail">
    <include refid="selectSql" />
    where a.HOTEL = #{hotel, jdbcType=INTEGER}
  </select>
  <insert id="insertDetail" parameterType="com.uc.bpg.domain.Room">
    insert into t_room (UUID, HOTEL,  STOREY, ROOM_NO, VALID)
    values (#{uuid,jdbcType=CHAR}, #{hotel,jdbcType=INTEGER}, 
      #{storey,jdbcType=INTEGER}, #{roomNo,jdbcType=VARCHAR}, true)
  </insert>
  <update id="updateDetailSelective" parameterType="com.uc.bpg.domain.Room">
    update t_room
    <set>
      <if test="hotel != null">
        HOTEL = #{hotel,jdbcType=INTEGER},
      </if>
      <if test="storey != null">
        STOREY = #{storey,jdbcType=INTEGER},
      </if>
      <if test="roomNo != null">
        ROOM_NO = #{roomNo,jdbcType=VARCHAR},
      </if>
      <if test="valid !=null">
        VALID = #{valid, jdbcType=BIT},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateDetail" parameterType="com.uc.bpg.domain.Room">
    update t_room
    set 
      HOTEL = #{hotel,jdbcType=INTEGER},
      STOREY = #{storey,jdbcType=INTEGER},
      ROOM_NO = #{roomNo,jdbcType=VARCHAR},
      VALID = #{valid, jdbcType=BIT}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectExistsRoom" parameterType="map" resultType="java.lang.Boolean">
    select count(*) &gt; 0  from t_room where HOTEL=#{hotel,jdbcType=INTEGER} and STOREY=#{storey,jdbcType=INTEGER} and ROOM_NO=#{room,jdbcType=VARCHAR} 
  </select>
  <insert id="insertBatch" parameterType="map" >    
    insert into t_room (UUID, HOTEL, STOREY, ROOM_NO, VALID)    
    values
    <trim suffixOverrides=",">    
      <foreach collection="rooms" item="room" separator=",">
        (#{room.uuid,jdbcType=CHAR},#{room.hotel,jdbcType=INTEGER},#{room.storey,jdbcType=INTEGER},#{room.roomNo,jdbcType=VARCHAR}, true)
      </foreach>
    </trim>
  </insert>
</mapper>